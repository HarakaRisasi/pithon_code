#_*_coding:utf-8_*_
#подставляю в строку данные (10) с помощью оператора %
x = "There are %d types of people." % 10
#инициализирую переменную и присваиваю ей значение
binary = "binary"
#инициализирую переменную и присваиваю ей значение
do_not = "don't"
#инициа-ю перем-ю и в присвоенную ей строку подставляю строковые 
#данные кортежем.
y = "Those who know %s and those who %s." % (binary, do_not)

#вывести на экран x
print x
#вывести на экран y
print y

#вывести на экран строку в которую подставить данные через %
print "I said: %r." % x
#вывести на экран строку в кот. подставить данные через %
print "I also said: '%s'." % y

#инициализировать переменную с ложным значением
hilarious = False
#присвоить строку новой переменной и добавить в нее оператор %
#с ключем r(representation)
joke_evaluation = "Isn't that joke so funny?! %r"

#при помощи функции print, вывод на экран переменной, что содержала
#строковые данные, но так как там был оставлен оператор
#форматирования - то стало возможным подставить к этой переменной
#значение др. переменной.
print joke_evaluation % hilarious

#объявляю переменную со строковым значением
w = "This is the left side of..."
#объявляю переменную со строковым значением
e = "a string with a right side."

#используя ф-ю print, возможно соеденить строки оператором сложения.
#сложив только имена переменных.
#Конкатенация строк
print w + e

